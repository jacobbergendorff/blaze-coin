body {
  margin: 0px;
}

#wp-articleHeading {
  text-shadow: 2px 2px black;
  background-color: #31203a;
  max-width: -webkit-max-content;
  max-width: -moz-max-content;
  max-width: max-content;
  max-height: -webkit-max-content;
  max-height: -moz-max-content;
  max-height: max-content;
}

.wp-bookshelfBg {
  height: -webkit-min-content;
  height: -moz-min-content;
  height: min-content;
  background-image: url(../images/bookshelfCompressed2.2MB.jpg);
  background-size: cover;
}

.wp-articleContent {
  border: 3px black solid;
  padding: 10px;
  border-radius: 50px;
  background-color: white;
  color: #613f75;
}

.wp-textDiv {
  display: none;
}

.wp-article {
  background-color: rgba(97, 63, 117, 0.6588235294);
  color: #E5C3D1;
  padding: 10px;
  padding-left: 100px;
  padding-right: 300px;
  padding-bottom: 100px;
}
.wp-article h1 {
  font-size: 5em;
  font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
  text-decoration: underline overline;
}
.wp-article h2 {
  font-size: 2em;
  text-decoration: underline;
}
.wp-article h3 {
  font-size: 1.5em;
  text-decoration: underline;
  cursor: pointer;
}
.wp-article h4 {
  font-size: 1.2em;
  text-decoration: underline;
  text-indent: 40px;
}
.wp-article .h4p {
  margin-left: 40px;
}
.wp-article p {
  padding-left: 50px;
  padding-right: 100px;
  font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande", "Lucida Sans", Arial, sans-serif;
  font-size: 1.2em;
}

#tp-meetTeamTxt {
  text-align: center;
  margin-bottom: 2%;
  font-size: 2.5rem;
}

#tp-line {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0));
  margin-bottom: 2%;
}

#tp-content {
  display: block;
  margin: auto;
  height: 80%;
  width: 80%;
}

#tp-profilePics {
  display: flex;
  justify-content: space-evenly;
  height: 70%;
}

.tp-profileBox {
  height: 90%;
  width: 18%;
  padding: 20px;
  border-radius: 5%;
  text-align: center;
  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255), 0.3em 0.3em 1em rgba(0, 0, 0, 0.3);
}
.tp-profileBox .tp-img {
  display: block;
  margin: auto;
  margin-top: 10%;
  width: 175px;
  height: 175px;
  border-radius: 50%;
}
.tp-profileBox .tp-h3 {
  margin-top: 17%;
}

/* Timeline Container */
.rmp-timeline {
  padding: 10px;
}

#rmp-outer {
  border: solid 1px black;
  border-radius: 5%;
  width: 40%;
  margin-left: 30%;
  padding: 15px;
  margin-top: 3.5%;
}

/* Card container */
.rmp-card {
  position: relative;
  max-width: 5800px;
}

/* setting padding based on even or odd */
.rmp-card:nth-child(odd) {
  padding: 10px 0 10px 10px;
}

.rmp-card:nth-child(even) {
  padding: 10px 10px 10px 0;
}

/* Global ::before */
.rmp-card::before {
  content: "";
  position: absolute;
  width: 50%;
  border: solid #DC4E76;
}

/* Setting the border of top, bottom, left */
.rmp-card:nth-child(odd)::before {
  left: 0px;
  top: -4.9px;
  bottom: -4.9px;
  border-width: 5px 0 5px 5px;
  border-radius: 50px 0 0 50px;
}

/* Setting the border of top, bottom, right */
.rmp-card:nth-child(even)::before {
  right: -5px;
  top: 0;
  bottom: 0;
  border-width: 5px 5px 5px 0;
  border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the first card */
.rmp-card:first-child::before {
  border-top: 0;
  border-top-left-radius: 0;
}

/* Removing the border if it is the last card  and it's even */
.rmp-card:last-child:nth-child(even)::before {
  border-bottom: 0;
  border-bottom-right-radius: 0;
}

/* Information about the timeline */
.rmp-info {
  display: flex;
  flex-direction: column;
  background: #333;
  color: gray;
  border-radius: 25px;
  padding: 10px;
}

/* Title of the card */
.rmp-title {
  color: #DC4E76;
  position: relative;
  margin-left: 5%;
}

/* Timeline dot  */
.rmp-title::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 999px;
  border: 3px solid #DC4E76;
}

/* text right if the card is even  */
.rmp-card:nth-child(even) > .rmp-info > .rmp-title {
  text-align: right;
}

/* setting dot to the left if the card is odd */
.rmp-card:nth-child(odd) > .rmp-info > .rmp-title::before {
  left: -51px;
}

/* setting dot to the right if the card is odd */
.rmp-card:nth-child(even) > .rmp-info > .rmp-title::before {
  right: -30px;
}

body {
  height: 100vh;
  margin: 0;
}

h1 {
  font-size: 5em;
}/*# sourceMappingURL=style.css.map */